//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RyanNickMasteryProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SWC_LMSEntities : DbContext
    {
        public SWC_LMSEntities()
            : base("name=SWC_LMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Assignment> Assignments { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<GradeLevel> GradeLevels { get; set; }
        public virtual DbSet<LmsUser> LmsUsers { get; set; }
        public virtual DbSet<Roster> Rosters { get; set; }
        public virtual DbSet<RosterAssignment> RosterAssignments { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
    
        public virtual ObjectResult<GetAssignmentGrades_Result> GetAssignmentGrades(Nullable<int> rosterId)
        {
            var rosterIdParameter = rosterId.HasValue ?
                new ObjectParameter("RosterId", rosterId) :
                new ObjectParameter("RosterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentGrades_Result>("GetAssignmentGrades", rosterIdParameter);
        }
    
        public virtual ObjectResult<GetAssignmentsInCourse_Result> GetAssignmentsInCourse(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentsInCourse_Result>("GetAssignmentsInCourse", courseIdParameter);
        }
    
        public virtual ObjectResult<GetRosterAssignments_Result> GetRosterAssignments(Nullable<int> rosterId)
        {
            var rosterIdParameter = rosterId.HasValue ?
                new ObjectParameter("RosterId", rosterId) :
                new ObjectParameter("RosterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRosterAssignments_Result>("GetRosterAssignments", rosterIdParameter);
        }
    
        public virtual ObjectResult<GetStudentAndRosterId_Result> GetStudentAndRosterId(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentAndRosterId_Result>("GetStudentAndRosterId", courseIdParameter);
        }
    
        public virtual ObjectResult<GetStudentsInCourse_Result> GetStudentsInCourse(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentsInCourse_Result>("GetStudentsInCourse", courseIdParameter);
        }
    
        public virtual ObjectResult<GradeLevelSelectAll_Result> GradeLevelSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GradeLevelSelectAll_Result>("GradeLevelSelectAll");
        }
    
        public virtual int LmsUserInsert(string id, string firstName, string lastName, string email, Nullable<byte> gradeLevelId, string suggestedRole, ObjectParameter userId)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var gradeLevelIdParameter = gradeLevelId.HasValue ?
                new ObjectParameter("GradeLevelId", gradeLevelId) :
                new ObjectParameter("GradeLevelId", typeof(byte));
    
            var suggestedRoleParameter = suggestedRole != null ?
                new ObjectParameter("SuggestedRole", suggestedRole) :
                new ObjectParameter("SuggestedRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LmsUserInsert", idParameter, firstNameParameter, lastNameParameter, emailParameter, gradeLevelIdParameter, suggestedRoleParameter, userId);
        }
    
        public virtual ObjectResult<LmsUserSelectByAspNetId_Result> LmsUserSelectByAspNetId(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LmsUserSelectByAspNetId_Result>("LmsUserSelectByAspNetId", idParameter);
        }
    
        public virtual ObjectResult<LmsUserSelectByUserId_Result> LmsUserSelectByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LmsUserSelectByUserId_Result>("LmsUserSelectByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<string> LmsUserSelectRoleNames(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LmsUserSelectRoleNames", userIdParameter);
        }
    
        public virtual ObjectResult<LmsUserSelectUnassigned_Result> LmsUserSelectUnassigned()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LmsUserSelectUnassigned_Result>("LmsUserSelectUnassigned");
        }
    
        public virtual int UpdateAssignmentGrade(Nullable<int> rosterAssignmentId, Nullable<decimal> pointsEarned, Nullable<decimal> percentage, Nullable<int> gradeLetter)
        {
            var rosterAssignmentIdParameter = rosterAssignmentId.HasValue ?
                new ObjectParameter("RosterAssignmentId", rosterAssignmentId) :
                new ObjectParameter("RosterAssignmentId", typeof(int));
    
            var pointsEarnedParameter = pointsEarned.HasValue ?
                new ObjectParameter("PointsEarned", pointsEarned) :
                new ObjectParameter("PointsEarned", typeof(decimal));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var gradeLetterParameter = gradeLetter.HasValue ?
                new ObjectParameter("GradeLetter", gradeLetter) :
                new ObjectParameter("GradeLetter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAssignmentGrade", rosterAssignmentIdParameter, pointsEarnedParameter, percentageParameter, gradeLetterParameter);
        }
    
        public virtual int UpdateRosterCurrentGrade(Nullable<int> rosterAssignmentId)
        {
            var rosterAssignmentIdParameter = rosterAssignmentId.HasValue ?
                new ObjectParameter("RosterAssignmentId", rosterAssignmentId) :
                new ObjectParameter("RosterAssignmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRosterCurrentGrade", rosterAssignmentIdParameter);
        }
    
        public virtual ObjectResult<LmsUserAndCourseIdSelectGradesForCourse_Result> LmsUserAndCourseIdSelectGradesForCourse(Nullable<int> userId, Nullable<int> courseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LmsUserAndCourseIdSelectGradesForCourse_Result>("LmsUserAndCourseIdSelectGradesForCourse", userIdParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<LmsUserSelectCourseNameAndCurrentGrade_Result> LmsUserSelectCourseNameAndCurrentGrade(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LmsUserSelectCourseNameAndCurrentGrade_Result>("LmsUserSelectCourseNameAndCurrentGrade", userIdParameter);
        }
    
        public virtual ObjectResult<LmsUserSelectCourseNameAndCurrentGrade_Result> LmsUserSelectCourseNameAndCurrentGrade1(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LmsUserSelectCourseNameAndCurrentGrade_Result>("LmsUserSelectCourseNameAndCurrentGrade1", userIdParameter);
        }
    
        public virtual ObjectResult<string> GetGuid(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetGuid", emailParameter);
        }
    
        public virtual ObjectResult<GetCoursesByTeacherId_Result> GetCoursesByTeacherId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCoursesByTeacherId_Result>("GetCoursesByTeacherId", userIdParameter);
        }
    
        public virtual ObjectResult<GetCourseInfo_Result> GetCourseInfo(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseInfo_Result>("GetCourseInfo", courseIdParameter);
        }
    
        public virtual int GetUserRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserRole");
        }
    
        public virtual ObjectResult<string> GetUserRoleId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserRoleId");
        }
    
        public virtual ObjectResult<string> GetSubjectName(Nullable<int> subjectId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSubjectName", subjectIdParameter);
        }
    
        public virtual ObjectResult<GetLmsUserCourses_Result> GetLmsUserCourses(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLmsUserCourses_Result>("GetLmsUserCourses", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserById_Result> GetUserById(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserById_Result>("GetUserById", userIdParameter);
        }
    
        public virtual int UpdateUser(string lastName, string firstName, string role, Nullable<int> userId)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", lastNameParameter, firstNameParameter, roleParameter, userIdParameter);
        }
    }
}
